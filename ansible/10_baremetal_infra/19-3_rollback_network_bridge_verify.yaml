---
# 19-3_rollback_network_bridge_verify.yaml - Verify network after bridge rollback
#
# Purpose:
#   Verifies network connectivity and configuration after rolling back network bridge.
#   Run this after reconnecting to the server following bridge removal.
#
# Run with: 
#   ansible-playbook -i inventory/inventory.yaml ansible/10_baremetal_infra/19-3_rollback_network_bridge_verify.yaml
#   Or with helper script:
#   ./scripts/run_ansible.sh ansible/10_baremetal_infra/19-3_rollback_network_bridge_verify.yaml

- name: Verify Network Bridge Rollback
  hosts: baremetal
  gather_facts: true
  become: true
  vars:
    network_bridge_name: "{{ network_bridge_name | default('br0') }}"
    ansible_become_pass: "{{ lookup('env', 'ANSIBLE_SUDO_PASS') }}"
    
  tasks:
    - name: Display verification message
      ansible.builtin.debug:
        msg: >-
          
          ═════════════════════════════════════════════════════════
          🔍 Verifying Network Bridge Rollback ({{ inventory_hostname }})
          ═════════════════════════════════════════════════════════
          
          Verifying that network bridge has been removed and proper
          connectivity has been restored.
          
          ═════════════════════════════════════════════════════════
    
    - name: Determine primary network interface
      ansible.builtin.shell: |
        ip route get 8.8.8.8 2>/dev/null | grep -oP 'dev \K\S+' | head -1
      register: route_info
      changed_when: false
      
    - name: Set primary interface fact
      ansible.builtin.set_fact:
        primary_interface: "{{ route_info.stdout }}"
      when: route_info.stdout != ''
    
    - name: Check if bridge interface still exists
      ansible.builtin.shell: ip link show {{ network_bridge_name }} 2>/dev/null || echo "NOT_FOUND"
      register: bridge_check
      changed_when: false
      
    - name: Display bridge removal status
      ansible.builtin.debug:
        msg: >-
          Bridge interface {{ network_bridge_name }}: {% if bridge_check.stdout == "NOT_FOUND" %}✓ Successfully removed{% else %}⚠️ Still exists{% endif %}
    
    - name: Verify bridge is gone
      ansible.builtin.assert:
        that:
          - bridge_check.stdout == "NOT_FOUND"
        fail_msg: |
          ERROR: Bridge Interface Still Exists
          
          DETAILS:
          - Bridge interface {{ network_bridge_name }} still exists
          - Rollback may have failed
          
          REQUIRED ACTION:
          - Check netplan configuration
          - Try applying netplan changes again:
            sudo netplan apply
    
    - name: Get updated network configuration
      ansible.builtin.shell: ip a
      register: network_config
      changed_when: false
      
    - name: Display current network configuration
      ansible.builtin.debug:
        msg: "{{ network_config.stdout_lines }}"
        
    - name: Verify physical interface has an IP address
      ansible.builtin.shell: |
        ip addr show {{ primary_interface | default('dummy') }} 2>/dev/null | grep 'inet ' || echo "NO_IP"
      register: interface_ip
      changed_when: false
      when: primary_interface is defined
      
    - name: Display physical interface status
      ansible.builtin.debug:
        msg: >-
          Interface {{ primary_interface }} status: {% if interface_ip.stdout != "NO_IP" %}✓ Active with IP{% else %}⚠️ No IP assigned{% endif %}
      when: primary_interface is defined
    
    - name: Verify network connectivity
      ansible.builtin.shell: ping -c 3 8.8.8.8
      register: ping_result
      changed_when: false
      failed_when: ping_result.rc != 0
      
    - name: Display connectivity test result
      ansible.builtin.debug:
        msg: "✓ Network connectivity test passed - able to reach 8.8.8.8"
    
    - name: Check if netplan directory exists
      ansible.builtin.stat:
        path: /etc/netplan
      register: netplan_dir
      
    - name: Check for bridge netplan configuration
      ansible.builtin.stat:
        path: /etc/netplan/01-thinkube-config.yaml
      register: thinkube_netplan
      when: netplan_dir.stat.exists
    
    - name: Verify bridge configuration was removed
      ansible.builtin.assert:
        that:
          - not thinkube_netplan.stat.exists|default(false)
        fail_msg: |
          ERROR: Bridge Netplan Configuration Still Exists
          
          DETAILS:
          - Bridge netplan configuration file still exists at /etc/netplan/01-thinkube-config.yaml
          - This file should have been removed during rollback
          
          REQUIRED ACTION:
          - Remove the file: sudo rm /etc/netplan/01-thinkube-config.yaml
          - Apply netplan changes: sudo netplan apply
      when: netplan_dir.stat.exists
        
    - name: Display completion message
      ansible.builtin.debug:
        msg: >-
          
          ═════════════════════════════════════════════════════════
          ✓ Network Bridge Rollback Verified ({{ inventory_hostname }})
          ═════════════════════════════════════════════════════════
          
          The network bridge has been successfully removed and network
          configuration has been restored to use the physical interface
          directly.
          
          DETAILS:
            ✓ Bridge interface {{ network_bridge_name }} no longer exists
            ✓ Physical interface has proper IP address
            ✓ Network connectivity is working
            ✓ Bridge netplan configuration has been removed
            
          IMPORTANT:
            - The network is now using the physical interface directly
            - No network bridge is available for VMs
            - To recreate the bridge, run:
              ./scripts/run_ansible.sh ansible/10_baremetal_infra/20-1_configure_network_bridge_prepare.yaml
          
          ═════════════════════════════════════════════════════════