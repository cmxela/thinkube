---
# 58_test_vm_ssh_keys.yaml - Test SSH key-based authentication to LXD VMs
# 
# Purpose:
#   Tests SSH key-based authentication from the management node to all LXD VMs
#   to verify that passwordless access is working correctly.
#
# Requirements:
#   - SSH keys must be set up first using 50_setup_vm_ssh_keys.yaml
#   - VMs must be running and accessible via their IPs
#
# Variables:
#   Required (from inventory):
#     - system_username: Username on the VMs
#
# Run with: 
#   ./scripts/run_ansible.sh ansible/20_lxd_setup/58_test_vm_ssh_keys.yaml
#

- name: Test SSH Key Authentication to LXD VMs
  hosts: management
  gather_facts: true
  become: false
  vars:
    ssh_key_name: "id_rsa"
    vms_to_test: "{{ groups['lxd_containers'] | default([]) }}"
  
  tasks:
    - name: Display test intro message
      ansible.builtin.debug:
        msg: >-
          
          ═════════════════════════════════════════════════════════
          🔍 Testing SSH Key Authentication to LXD VMs ({{ inventory_hostname }})
          ═════════════════════════════════════════════════════════
          
          This playbook tests SSH key-based authentication from the 
          management node to all LXD VMs to verify that passwordless 
          access is working correctly.
          
          VMs to test: {{ vms_to_test | join(', ') }}
          
          ═════════════════════════════════════════════════════════
    
    # Verify we have VMs to test
    - name: Check if we have VMs to test
      ansible.builtin.assert:
        that:
          - vms_to_test | length > 0
        fail_msg: |
          ERROR: No VMs found to test SSH key authentication
          
          DETAILS:
          - No VMs were found in the inventory group 'lxd_containers'
          
          REQUIRED ACTION:
          - Make sure VMs are created first using 30_create_vms.yaml
          - Ensure SSH keys are set up using 50_setup_vm_ssh_keys.yaml
          - Check inventory group definition for 'lxd_containers'
        success_msg: "✓ Found {{ vms_to_test | length }} VMs to test: {{ vms_to_test | join(', ') }}"

    # Check if SSH key exists
    - name: Check if SSH key exists
      ansible.builtin.stat:
        path: "{{ ansible_user_dir }}/.ssh/{{ ssh_key_name }}"
      register: ssh_key_check
      
    - name: Verify SSH key exists
      ansible.builtin.assert:
        that:
          - ssh_key_check.stat.exists
        fail_msg: |
          ERROR: SSH key does not exist
          
          DETAILS:
          - SSH key file not found at {{ ansible_user_dir }}/.ssh/{{ ssh_key_name }}
          
          REQUIRED ACTION:
          - Run the 50_setup_vm_ssh_keys.yaml playbook first to set up SSH keys
        success_msg: "✓ SSH key exists at {{ ansible_user_dir }}/.ssh/{{ ssh_key_name }}"
        
    # Check SSH config contains VM entries
    - name: Check if SSH config exists
      ansible.builtin.stat:
        path: "{{ ansible_user_dir }}/.ssh/config"
      register: ssh_config_stat
      
    - name: Verify SSH config exists
      ansible.builtin.assert:
        that:
          - ssh_config_stat.stat.exists
        fail_msg: |
          ERROR: SSH config file does not exist
          
          DETAILS:
          - SSH config file not found at {{ ansible_user_dir }}/.ssh/config
          
          REQUIRED ACTION:
          - Run the 50_setup_vm_ssh_keys.yaml playbook first to set up SSH config
        success_msg: "✓ SSH config exists at {{ ansible_user_dir }}/.ssh/config"
        
    # Check if SSH config contains entries for the VMs
    - name: Check if SSH config contains VM entries
      ansible.builtin.shell: |
        grep -q "Host {{ item }}" {{ ansible_user_dir }}/.ssh/config
      register: config_check
      changed_when: false
      failed_when: false
      loop: "{{ vms_to_test }}"
      
    - name: Verify SSH config contains entries for all VMs
      ansible.builtin.assert:
        that:
          - item.rc == 0
        fail_msg: |
          ERROR: SSH config does not contain entry for VM '{{ item.item }}'
          
          DETAILS:
          - SSH config file exists but does not contain an entry for VM '{{ item.item }}'
          
          REQUIRED ACTION:
          - Run the 50_setup_vm_ssh_keys.yaml playbook to update SSH config
        success_msg: "✓ SSH config contains entry for VM '{{ item.item }}'"
      loop: "{{ config_check.results }}"
        
    # Test SSH connections to VMs
    - name: Test direct SSH connections to VMs
      ansible.builtin.shell: |
        ssh -i {{ ansible_user_dir }}/.ssh/{{ ssh_key_name }} \
            -o ConnectTimeout=5 \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -o BatchMode=yes \
            {{ system_username }}@{{ hostvars[item]['lan_ip'] }} \
            "echo 'Successfully connected from {{ inventory_hostname }} to {{ item }} IP={{ hostvars[item]['lan_ip'] }}'"
      register: direct_ssh_test
      changed_when: false
      failed_when: false
      loop: "{{ vms_to_test }}"
      
    - name: Display direct SSH connection results
      ansible.builtin.debug:
        msg: "{{ 'Success' if item.rc == 0 else 'Failed' }}: Direct SSH to {{ item.item }} ({{ hostvars[item.item]['lan_ip'] }})"
      loop: "{{ direct_ssh_test.results }}"
        
    - name: Verify direct SSH connections succeed
      ansible.builtin.assert:
        that:
          - item.rc == 0
        fail_msg: |
          ERROR: Direct SSH connection to VM '{{ item.item }}' failed
          
          DETAILS:
          - SSH connection to {{ item.item }} ({{ hostvars[item.item]['lan_ip'] }}) failed
          - Error: {{ item.stderr }}
          
          REQUIRED ACTION:
          - Check VM network connectivity
          - Run the 50_setup_vm_ssh_keys.yaml playbook to fix SSH keys
        success_msg: "✓ Direct SSH connection to VM '{{ item.item }}' succeeded"
      loop: "{{ direct_ssh_test.results }}"
      
    # Test SSH connections using VM hostnames from SSH config
    - name: Test SSH connections using hostnames
      ansible.builtin.shell: |
        ssh -o ConnectTimeout=5 \
            -o BatchMode=yes \
            {{ item }} \
            "echo 'Successfully connected from {{ inventory_hostname }} to {{ item }} using hostname'"
      register: hostname_ssh_test
      changed_when: false
      failed_when: false
      loop: "{{ vms_to_test }}"
      
    - name: Display hostname SSH connection results
      ansible.builtin.debug:
        msg: "{{ 'Success' if item.rc == 0 else 'Failed' }}: SSH using hostname to {{ item.item }}"
      loop: "{{ hostname_ssh_test.results }}"
        
    - name: Verify hostname SSH connections succeed
      ansible.builtin.assert:
        that:
          - item.rc == 0
        fail_msg: |
          ERROR: SSH connection using hostname to VM '{{ item.item }}' failed
          
          DETAILS:
          - SSH connection to {{ item.item }} using hostname failed
          - Error: {{ item.stderr }}
          
          REQUIRED ACTION:
          - Check SSH config file
          - Run the 50_setup_vm_ssh_keys.yaml playbook to fix SSH configuration
        success_msg: "✓ SSH connection using hostname to VM '{{ item.item }}' succeeded"
      loop: "{{ hostname_ssh_test.results }}"
        
    # Display overall test results
    - name: Display successful test message
      ansible.builtin.debug:
        msg: >-
          
          ═════════════════════════════════════════════════════════
          ✅ SSH Key Authentication Tests Passed ({{ inventory_hostname }})
          ═════════════════════════════════════════════════════════
          
          All SSH key authentication tests have passed successfully.
          
          DETAILS:
            ✓ SSH key exists at {{ ansible_user_dir }}/.ssh/{{ ssh_key_name }}
            ✓ SSH config contains entries for all {{ vms_to_test | length }} VMs
            ✓ Direct SSH connections to all VMs succeeded
            ✓ SSH connections using hostnames to all VMs succeeded
          
          RESULT:
            SSH key-based authentication is properly configured and working.
            Passwordless SSH access is available to all VMs.
          
          ═════════════════════════════════════════════════════════
      when: direct_ssh_test.results | map(attribute='rc') | select('==', 0) | list | length == vms_to_test | length and
            hostname_ssh_test.results | map(attribute='rc') | select('==', 0) | list | length == vms_to_test | length
            
    - name: Display failed test message
      ansible.builtin.debug:
        msg: >-
          
          ═════════════════════════════════════════════════════════
          ❌ SSH Key Authentication Tests Failed ({{ inventory_hostname }})
          ═════════════════════════════════════════════════════════
          
          Some SSH key authentication tests have failed.
          
          DETAILS:
            Direct SSH connections: {{ direct_ssh_test.results | map(attribute='rc') | select('==', 0) | list | length }} of {{ vms_to_test | length }} succeeded
            Hostname SSH connections: {{ hostname_ssh_test.results | map(attribute='rc') | select('==', 0) | list | length }} of {{ vms_to_test | length }} succeeded
          
          REQUIRED ACTION:
            Run the 50_setup_vm_ssh_keys.yaml playbook to fix SSH configuration
          
          ═════════════════════════════════════════════════════════
      when: direct_ssh_test.results | map(attribute='rc') | select('==', 0) | list | length != vms_to_test | length or
            hostname_ssh_test.results | map(attribute='rc') | select('==', 0) | list | length != vms_to_test | length
            
    # Fail the playbook if any test failed
    - name: Fail if any test failed
      ansible.builtin.fail:
        msg: "Some SSH key authentication tests failed. See previous messages for details."
      when: direct_ssh_test.results | map(attribute='rc') | select('==', 0) | list | length != vms_to_test | length or
            hostname_ssh_test.results | map(attribute='rc') | select('==', 0) | list | length != vms_to_test | length