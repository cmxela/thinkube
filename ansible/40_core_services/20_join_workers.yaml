---
# 50_vm_join_workers.yaml - Join worker nodes to the MicroK8s cluster
# Run with: ansible-playbook -i inventory/inventory.yaml ansible/40_core_services/50_vm_join_workers.yaml

- name: Join Worker Nodes to MicroK8s Cluster
  hosts: baremetal
  become: false
  gather_facts: true
  
  vars:
    admin_username: "thinkube"
  
  tasks:
    # Phase 1: Verify MicroK8s control plane is ready
    - name: Verify MicroK8s control plane is ready
      block:
        - name: Check MicroK8s status on control plane
          ansible.builtin.command: >
            lxc exec {{ groups['microk8s_control_plane'][0] }} -- microk8s status --wait-ready
          register: microk8s_ready
          failed_when: microk8s_ready.rc != 0
          when: 
            - "'microk8s_control_plane' in groups"
            - groups['microk8s_control_plane'] | length > 0
            - inventory_hostname == hostvars[groups['microk8s_control_plane'][0]]['parent_host'] | default('none')
          become: true
          
        # Get node info before joining
        - name: Get node information before joining
          ansible.builtin.command: >
            lxc exec {{ groups['microk8s_control_plane'][0] }} -- microk8s kubectl get nodes
          register: nodes_before
          changed_when: false
          when: 
            - "'microk8s_control_plane' in groups"
            - groups['microk8s_control_plane'] | length > 0
            - inventory_hostname == hostvars[groups['microk8s_control_plane'][0]]['parent_host'] | default('none')
          become: true
          
        - name: Display node information before joining
          ansible.builtin.debug:
            msg: |
              Nodes before joining workers:
              {{ nodes_before.stdout_lines | join('\n') }}
          when: 
            - "'microk8s_control_plane' in groups"
            - groups['microk8s_control_plane'] | length > 0
            - inventory_hostname == hostvars[groups['microk8s_control_plane'][0]]['parent_host'] | default('none')
            - nodes_before is defined
      tags: verify_control_plane
    
    # Phase 2: Generate and distribute join token
    - name: Generate and distribute join token
      block:
        # Generate join token on control plane
        - name: Generate join token on control plane
          ansible.builtin.command: >
            lxc exec {{ groups['microk8s_control_plane'][0] }} -- microk8s add-node --token-ttl=3600
          register: join_command
          failed_when: join_command.rc != 0
          when: 
            - "'microk8s_control_plane' in groups"
            - groups['microk8s_control_plane'] | length > 0
            - inventory_hostname == hostvars[groups['microk8s_control_plane'][0]]['parent_host'] | default('none')
          become: true
          
        # Extract join command and components
        - name: Extract join command information
          ansible.builtin.set_fact:
            join_token: "{{ join_command.stdout_lines[0] | default('') }}"
            join_raw_ip: "{{ join_command.stdout_lines[0] | regex_search('(?<=microk8s join )[^:]+') | default('') }}"
            join_port: "{{ join_command.stdout_lines[0] | regex_search(':[0-9]+') | default('') }}"
            join_token_value: "{{ join_command.stdout_lines[0] | regex_search('(?<=--token=)[^ ]+') | default('') }}"
            join_zerotier_ip: "{{ hostvars[groups['microk8s_control_plane'][0]]['zerotier_ip'] | default('') }}"
          when: 
            - "'microk8s_control_plane' in groups"
            - groups['microk8s_control_plane'] | length > 0
            - inventory_hostname == hostvars[groups['microk8s_control_plane'][0]]['parent_host'] | default('none')
            - join_command is defined
            - join_command.rc == 0
          
        # Share join information with management host
        - name: Share join information with management host
          ansible.builtin.set_fact:
            controller_join_info:
              token: "{{ hostvars[inventory_hostname]['join_token'] | default('') }}"
              raw_ip: "{{ hostvars[inventory_hostname]['join_raw_ip'] | default('') }}"
              port: "{{ hostvars[inventory_hostname]['join_port'] | default('') }}"
              token_value: "{{ hostvars[inventory_hostname]['join_token_value'] | default('') }}"
              zerotier_ip: "{{ hostvars[inventory_hostname]['join_zerotier_ip'] | default('') }}"
          delegate_to: "{{ groups['management'][0] }}"
          when:
            - "'management' in groups"
            - groups['management'] | length > 0
            - join_token is defined and join_token != ''
            - join_raw_ip is defined and join_raw_ip != ''
          
        # Distribute join information to worker node parent hosts
        - name: Distribute join information to worker node parents
          ansible.builtin.set_fact:
            controller_join_info: "{{ hostvars[groups['management'][0]]['controller_join_info'] | default({}) }}"
          delegate_to: "{{ hostvars[item]['parent_host'] }}"
          loop: "{{ groups['microk8s_workers'] | default([]) }}"
          when:
            - "'microk8s_workers' in groups"
            - groups['microk8s_workers'] | length > 0
            - "'management' in groups"
            - groups['management'] | length > 0
            - hostvars[groups['management'][0]]['controller_join_info'] is defined
          
        # Display join token information
        - name: Display join token information
          ansible.builtin.debug:
            msg: |
              ════════════════════════════════════════════════════════════════════════
              JOIN TOKEN INFORMATION
              ════════════════════════════════════════════════════════════════════════
              
              Raw join command: {{ join_token }}
              
              Parsed components:
              - Control plane IP: {{ join_raw_ip }}
              - ZeroTier IP: {{ join_zerotier_ip }}
              - Port: {{ join_port }}
              - Token: {{ join_token_value }}
              
              Modified join command (using ZeroTier IP):
              microk8s join {{ join_zerotier_ip }}{{ join_port }} --token={{ join_token_value }}
              
              ════════════════════════════════════════════════════════════════════════
          when: 
            - "'microk8s_control_plane' in groups"
            - groups['microk8s_control_plane'] | length > 0
            - inventory_hostname == hostvars[groups['microk8s_control_plane'][0]]['parent_host'] | default('none')
            - join_token is defined and join_token != ''
            - join_zerotier_ip is defined and join_zerotier_ip != ''
      tags: generate_token
    
    # Phase 3: Join worker nodes to cluster
    - name: Join worker nodes to cluster
      block:
        # Execute join commands on worker nodes
        - name: Join worker nodes to the cluster
          ansible.builtin.shell: |
            JOIN_CMD="microk8s join {{ controller_join_info.zerotier_ip }}{{ controller_join_info.port }} --token={{ controller_join_info.token_value }}"
            echo "Executing join command: $JOIN_CMD on {{ item }}"
            lxc exec {{ item }} -- bash -c "$JOIN_CMD"
          register: worker_join
          failed_when: worker_join.rc != 0
          loop: "{{ groups['microk8s_workers'] | default([]) }}"
          when:
            - "'microk8s_workers' in groups"
            - groups['microk8s_workers'] | length > 0
            - inventory_hostname == hostvars[item]['parent_host'] | default('none')
            - controller_join_info is defined
            - controller_join_info.zerotier_ip is defined and controller_join_info.zerotier_ip != ''
            - controller_join_info.token_value is defined and controller_join_info.token_value != ''
          become: true
          
        # Display worker join results
        - name: Display worker join results
          ansible.builtin.debug:
            msg: |
              ════════════════════════════════════════════════════════════════════════
              WORKER NODE JOIN RESULTS
              ════════════════════════════════════════════════════════════════════════
              
              Worker node {{ item.item }} join process:
              {{ item.stdout_lines | join('\n') }}
              
              Status: {% if item.rc == 0 %}✅ Success{% else %}❌ Failed{% endif %}
              
              ════════════════════════════════════════════════════════════════════════
          loop: "{{ worker_join.results | default([]) }}"
          when:
            - worker_join is defined
            - worker_join.results is defined
      tags: join_workers
    
    # Phase 4: Wait for nodes to be ready
    - name: Wait for nodes to be ready
      ansible.builtin.pause:
        seconds: 60
      when: worker_join is defined and worker_join is changed
      tags: wait_ready
    
    # Phase 5: Verify cluster status after joining
    - name: Verify cluster status after joining
      block:
        # Check MicroK8s status
        - name: Check MicroK8s status
          ansible.builtin.command: >
            lxc exec {{ groups['microk8s_control_plane'][0] }} -- microk8s status
          register: microk8s_status_after
          failed_when: false
          when: 
            - "'microk8s_control_plane' in groups"
            - groups['microk8s_control_plane'] | length > 0
            - inventory_hostname == hostvars[groups['microk8s_control_plane'][0]]['parent_host'] | default('none')
          become: true
          
        # Display MicroK8s status
        - name: Display MicroK8s status after joining
          ansible.builtin.debug:
            msg: |
              ════════════════════════════════════════════════════════════════════════
              MICROK8S STATUS AFTER JOINING WORKERS
              ════════════════════════════════════════════════════════════════════════
              
              {{ microk8s_status_after.stdout_lines | join('\n') }}
              
              ════════════════════════════════════════════════════════════════════════
          when: 
            - "'microk8s_control_plane' in groups"
            - groups['microk8s_control_plane'] | length > 0
            - inventory_hostname == hostvars[groups['microk8s_control_plane'][0]]['parent_host'] | default('none')
            - microk8s_status_after is defined
          
        # Check nodes
        - name: Check Kubernetes nodes after joining
          ansible.builtin.command: >
            lxc exec {{ groups['microk8s_control_plane'][0] }} -- microk8s kubectl get nodes
          register: k8s_nodes_after
          failed_when: false
          when: 
            - "'microk8s_control_plane' in groups"
            - groups['microk8s_control_plane'] | length > 0
            - inventory_hostname == hostvars[groups['microk8s_control_plane'][0]]['parent_host'] | default('none')
          become: true
          
        # Display Kubernetes nodes
        - name: Display Kubernetes nodes after joining
          ansible.builtin.debug:
            msg: |
              ════════════════════════════════════════════════════════════════════════
              KUBERNETES NODES AFTER JOINING WORKERS
              ════════════════════════════════════════════════════════════════════════
              
              {{ k8s_nodes_after.stdout_lines | join('\n') }}
              
              ════════════════════════════════════════════════════════════════════════
          when: 
            - "'microk8s_control_plane' in groups"
            - groups['microk8s_control_plane'] | length > 0
            - inventory_hostname == hostvars[groups['microk8s_control_plane'][0]]['parent_host'] | default('none')
            - k8s_nodes_after is defined
      tags: verify_cluster
    
    # Phase 6: Display completion message
    - name: Display worker join completion message
      ansible.builtin.debug:
        msg: |
          ════════════════════════════════════════════════════════════════════════
          ✅ Worker Node Join Completed
          ════════════════════════════════════════════════════════════════════════
          
          Worker nodes have been joined to the MicroK8s cluster:
          - Control plane: {{ groups['microk8s_control_plane'] | join(', ') }}
          - Workers: {{ groups['microk8s_workers'] | join(', ') }}
          
          NEXT STEPS:
            Run the CoreDNS configuration playbook:
            ansible-playbook -i inventory/inventory.yaml ansible/40_core_services/60_vm_setup_coredns.yaml
          
          ════════════════════════════════════════════════════════════════════════
      run_once: true