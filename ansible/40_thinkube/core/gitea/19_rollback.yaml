---
# ansible/40_thinkube/core/gitea/19_rollback.yaml
# Description:
#   Rollback Gitea deployment and clean up resources
#
# Usage:
#   cd ~/thinkube
#   ./scripts/run_ansible.sh ansible/40_thinkube/core/gitea/19_rollback.yaml

- name: Rollback Gitea Deployment
  hosts: microk8s_control_plane
  gather_facts: false
  
  vars:
    gitea_namespace: "gitea"
    gitea_db_name: "gitea"
    gitea_db_user: "gitea"
    keycloak_client_id: "gitea"
    keycloak_realm: "thinkube"
    postgres_host: "postgresql.postgresql.svc.cluster.local"
    
  tasks:
    - name: Remove Gitea namespace (this will delete all resources)
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: absent
        api_version: v1
        kind: Namespace
        name: "{{ gitea_namespace }}"
      ignore_errors: yes
    
    - name: Wait for namespace deletion
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig }}"
        api_version: v1
        kind: Namespace
        name: "{{ gitea_namespace }}"
      register: namespace_check
      until: namespace_check.resources | length == 0
      retries: 60
      delay: 5
      ignore_errors: yes
    
    - name: Clean up PostgreSQL database
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        definition:
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: "gitea-db-cleanup-{{ ansible_date_time.epoch }}"
            namespace: postgresql
          spec:
            ttlSecondsAfterFinished: 300
            template:
              spec:
                restartPolicy: Never
                containers:
                - name: cleanup-db
                  image: postgres:14
                  env:
                  - name: PGPASSWORD
                    value: "{{ lookup('env', 'ADMIN_PASSWORD') }}"
                  command:
                  - /bin/bash
                  - -c
                  - |
                    # Drop database
                    psql -h {{ postgres_host }} -U postgres -c "DROP DATABASE IF EXISTS {{ gitea_db_name }};"
                    
                    # Drop user
                    psql -h {{ postgres_host }} -U postgres -c "DROP USER IF EXISTS {{ gitea_db_user }};"
                    
                    echo "Database and user cleaned up"
      when: lookup('env', 'ADMIN_PASSWORD') != ""
    
    - name: Remove Keycloak client
      ansible.builtin.include_role:
        name: keycloak/keycloak_common
      vars:
        keycloak_admin_username: "{{ admin_username }}"
        keycloak_admin_password: "{{ lookup('env', 'ADMIN_PASSWORD') }}"
      when: lookup('env', 'ADMIN_PASSWORD') != ""
    
    - name: Get Keycloak client ID
      ansible.builtin.uri:
        url: "https://auth.{{ domain_name }}/admin/realms/{{ keycloak_realm }}/clients?clientId={{ keycloak_client_id }}"
        method: GET
        headers:
          Authorization: "Bearer {{ keycloak_admin_token }}"
        validate_certs: true
      register: client_response
      when: 
        - keycloak_admin_token is defined
        - lookup('env', 'ADMIN_PASSWORD') != ""
    
    - name: Delete Keycloak client
      ansible.builtin.uri:
        url: "https://auth.{{ domain_name }}/admin/realms/{{ keycloak_realm }}/clients/{{ client_response.json[0].id }}"
        method: DELETE
        headers:
          Authorization: "Bearer {{ keycloak_admin_token }}"
        validate_certs: true
        status_code: 204
      when: 
        - client_response is defined
        - client_response.json | length > 0
        - keycloak_admin_token is defined
    
    - name: Summary of rollback
      ansible.builtin.debug:
        msg: |
          
          ════════════════════════════════════════════════════════
          ✅ Gitea Rollback Completed
          ════════════════════════════════════════════════════════
          
          Removed:
          ✓ Gitea namespace and all resources
          ✓ PostgreSQL database and user
          ✓ Keycloak client configuration
          ✓ All persistent data
          
          Note: If you redeploy Gitea, it will start fresh
          with no existing repositories or users.
          
          ════════════════════════════════════════════════════════