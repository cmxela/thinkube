---
# ansible/40_thinkube/core/infrastructure/cert-manager/05_setup_dns_cnames.yaml
# Description:
#   Setup CNAME records for ACME challenge delegation
#   Creates DNS records to redirect ACME challenge validation to different hostnames
#
# Requirements:
#   - Cloudflare API token with Zone:DNS:Edit permissions
#   - Environment variable: CLOUDFLARE_API_TOKEN
#
# Usage:
#   cd ~/thinkube
#   ./scripts/run_ansible.sh ansible/40_thinkube/core/infrastructure/cert-manager/05_setup_dns_cnames.yaml
#
# Variables from inventory:
#   - domain_name: The base domain name
#   - acme_email: The email address for ACME registration
#
# Dependencies:
#   - None (should be run before cert-manager deployment)

- name: Setup CNAME records for ACME challenge delegation
  hosts: microk8s_control_plane
  gather_facts: true

  vars:
    acme_email: "admin@{{ domain_name }}"
    cloudflare_token: "{{ lookup('env', 'CLOUDFLARE_API_TOKEN') }}"

  tasks:
    - name: Verify Cloudflare API token is set
      ansible.builtin.fail:
        msg: "CLOUDFLARE_API_TOKEN environment variable is not set"
      when: cloudflare_token | length == 0

    - name: Get Cloudflare Zone ID for the domain
      ansible.builtin.uri:
        url: "https://api.cloudflare.com/client/v4/zones?name={{ domain_name }}"
        method: GET
        headers:
          Authorization: "Bearer {{ cloudflare_token }}"
          Content-Type: "application/json"
        return_content: true
      register: zone_info
      failed_when: zone_info.json.result | length == 0
      
    - name: Extract Zone ID
      ansible.builtin.set_fact:
        zone_id: "{{ zone_info.json.result[0].id }}"

    - name: Create CNAME record for base domain challenge
      ansible.builtin.uri:
        url: "https://api.cloudflare.com/client/v4/zones/{{ zone_id }}/dns_records"
        method: POST
        headers:
          Authorization: "Bearer {{ cloudflare_token }}"
          Content-Type: "application/json"
        body:
          type: "CNAME"
          name: "_acme-challenge"
          content: "_acme-challenge-base.{{ domain_name }}"
          ttl: 120
          proxied: false
        body_format: json
        status_code: [200, 201, 400]  # 400 can happen if record exists
      register: cname_base_result
      
    - name: Display base CNAME result
      ansible.builtin.debug:
        var: cname_base_result.json
      when: cname_base_result.json is defined

    - name: Create CNAME record for wildcard domain challenge
      ansible.builtin.uri:
        url: "https://api.cloudflare.com/client/v4/zones/{{ zone_id }}/dns_records"
        method: POST
        headers:
          Authorization: "Bearer {{ cloudflare_token }}"
          Content-Type: "application/json"
        body:
          type: "CNAME"
          name: "_acme-challenge.wildcard"
          content: "_acme-challenge-wildcard.{{ domain_name }}"
          ttl: 120
          proxied: false
        body_format: json
        status_code: [200, 201, 400]  # 400 can happen if record exists
      register: cname_wildcard_result

    - name: Display wildcard CNAME result
      ansible.builtin.debug:
        var: cname_wildcard_result.json
      when: cname_wildcard_result.json is defined
      
    - name: Create CNAME record for kn subdomain challenge
      ansible.builtin.uri:
        url: "https://api.cloudflare.com/client/v4/zones/{{ zone_id }}/dns_records"
        method: POST
        headers:
          Authorization: "Bearer {{ cloudflare_token }}"
          Content-Type: "application/json"
        body:
          type: "CNAME"
          name: "_acme-challenge.kn"
          content: "_acme-challenge-kn.{{ domain_name }}"
          ttl: 120
          proxied: false
        body_format: json
        status_code: [200, 201, 400]  # 400 can happen if record exists
      register: cname_kn_result

    - name: Display kn subdomain CNAME result
      ansible.builtin.debug:
        var: cname_kn_result.json
      when: cname_kn_result.json is defined

    - name: Display next steps
      ansible.builtin.debug:
        msg:
          - "CNAME records have been created in Cloudflare for challenge delegation:"
          - "- _acme-challenge.{{ domain_name }} → _acme-challenge-base.{{ domain_name }}"
          - "- _acme-challenge.wildcard.{{ domain_name }} → _acme-challenge-wildcard.{{ domain_name }}"
          - "- _acme-challenge.kn.{{ domain_name }} → _acme-challenge-kn.{{ domain_name }}"
          - ""
          - "Now proceed to running the cert-manager deployment playbook:"
          - "  ./scripts/run_ansible.sh ansible/40_thinkube/core/infrastructure/cert-manager/10_deploy.yaml"