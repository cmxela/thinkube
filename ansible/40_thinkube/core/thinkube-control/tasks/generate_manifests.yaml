---
# Generate Kubernetes manifests from templates
# This task file is included in the main deployment playbook

# Template the Kubernetes manifests directly in the cloned repository
- name: Template Kubernetes manifests
  ansible.builtin.template:
    src: "{{ local_repo_path }}/k8s/{{ item }}"
    dest: "{{ local_repo_path }}/k8s/{{ item | replace('.jinja', '') }}"
    mode: '0644'
  loop:
    - namespace.yaml.jinja
    - backend-deployment.yaml.jinja
    - backend-service.yaml.jinja
    - frontend-deployment.yaml.jinja
    - frontend-service.yaml.jinja
    - ingress.yaml.jinja
    - keycloak-setup.yaml.jinja
    - kustomization.yaml.jinja
  vars:
    # Template variables
    namespace: "{{ k8s_namespace }}"
    control_subdomain: "control"
    auth_subdomain: "auth"
    registry_subdomain: "registry"
    domain_name: "{{ domain_name }}"
    keycloak_realm: "thinkube"
    github_org: "{{ github_user }}"
    project_name: "{{ app_name }}"

# Template the workflow files
- name: Template workflow files
  ansible.builtin.template:
    src: "{{ local_repo_path }}/workflows/{{ item }}"
    dest: "{{ local_repo_path }}/workflows/{{ item | replace('.jinja', '') }}"
    mode: '0644'
  loop:
    - build-workflow.yaml.jinja
  ignore_errors: true  # In case the file doesn't exist yet

# Keep templates for reference and regeneration
- name: Create templates directory
  ansible.builtin.file:
    path: "{{ local_repo_path }}/templates"
    state: directory
    mode: '0755'

- name: Copy templates to templates directory
  ansible.builtin.copy:
    src: "{{ local_repo_path }}/{{ item }}"
    dest: "{{ local_repo_path }}/templates/{{ item }}"
    mode: '0644'
  loop:
    - k8s/namespace.yaml.jinja
    - k8s/backend-deployment.yaml.jinja
    - k8s/backend-service.yaml.jinja
    - k8s/frontend-deployment.yaml.jinja
    - k8s/frontend-service.yaml.jinja
    - k8s/ingress.yaml.jinja
    - k8s/keycloak-setup.yaml.jinja
    - k8s/kustomization.yaml.jinja
    - workflows/build-workflow.yaml.jinja
  ignore_errors: yes

- name: Add README for templates
  ansible.builtin.copy:
    content: |
      # Templates Directory
      
      This directory contains the original Jinja2 templates used to generate the Kubernetes manifests.
      
      **DO NOT EDIT THESE FILES DIRECTLY IN GITEA**
      
      To update templates:
      1. Make changes in the GitHub repository
      2. Re-run the deployment playbook to regenerate manifests
      
      Template variables used:
      - domain_name: {{ domain_name }}
      - namespace: {{ k8s_namespace }}
      - registry: registry.{{ domain_name }}
      
      Generated from GitHub commit: {{ github_commit | default('unknown') }}
      Generated on: {{ ansible_date_time.iso8601 }}
    dest: "{{ local_repo_path }}/templates/README.md"
    mode: '0644'

- name: Create deployment metadata
  ansible.builtin.copy:
    content: |
      # Deployment Metadata
      
      source_repo: {{ github_repo_url | default('https://github.com/user/repo') }}
      source_commit: {{ github_commit | default('unknown') }}
      generated_date: {{ ansible_date_time.iso8601 }}
      domain_name: {{ domain_name }}
      
      # Template Variables Used
      namespace: {{ k8s_namespace }}
      registry_url: registry.{{ domain_name }}
      control_url: control.{{ domain_name }}
      auth_url: auth.{{ domain_name }}
      
      # Version Control Strategy
      This repository contains processed Kubernetes manifests generated from templates.
      - Original templates are in the /templates directory
      - DO NOT edit manifests directly - changes will be overwritten
      - To update: modify templates in GitHub and re-run deployment
    dest: "{{ local_repo_path }}/DEPLOYMENT_INFO.yaml"
    mode: '0644'

- name: Commit all changes
  ansible.builtin.shell: |
    cd {{ local_repo_path }}
    git add -A
    git diff --cached --exit-code || git commit -m "Configure thinkube-control for {{ domain_name }}"
  args:
    executable: /bin/bash
  register: git_commit
  changed_when: git_commit.rc == 0
  failed_when: git_commit.rc not in [0, 1]

- name: Push to GitHub
  ansible.builtin.shell: |
    cd {{ local_repo_path }}
    git push origin main || git push --set-upstream origin main
  args:
    executable: /bin/bash
  when: git_commit.changed